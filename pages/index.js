import Head from "next/head";
import Banner from "../components/Banner";
import Card from "../components/Card";
import Hero from "../components/Hero";
import styles from "../styles/Home.module.css";
import Stores from "../stores.json";
import { fetchCoffeeStores } from "../lib/coffee-stores";
import { useState } from "react";
import useTrackLocation from "./hooks/use-track-location";

export default function Home(props) {
	const { handleTrackLocation, latLng, locationErrorMsg, isFindLocation } =
		useTrackLocation();
	const [coordinates, setCoordinates] = useState();
	console.log({ latLng });
	const handleBannerClick = () => {
		handleTrackLocation(latLng, locationErrorMsg);
	};

	return (
		<div className={styles.container}>
			<Head>
				<title>Coffee Shops</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
				<link rel="preconnect" href="https://fonts.googleapis.com" />
				<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
				<link
					href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap"
					rel="stylesheet"
				/>
			</Head>
			<main className={styles.main}>
				<Banner
					buttonText={isFindLocation ? "Loading..." : "View stores nearby"}
					handleOnClick={handleBannerClick}
				/>
				<div className={styles.heroImage}>
					<Hero />
				</div>
				<h2 className={styles.heading2}>Lahore Stores</h2>
				<div className={styles.cardLayout}>
					{props.Stores.map((store) => {
						return (
							<Card
								title={store.name}
								className={styles.card}
								href={`/coffee-store/${store.id}`}
								image={
									store.imgUrl ||
									"https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
								}
								key={store.id}
							/>
						);
					})}
				</div>
			</main>
		</div>
	);
}
export async function getStaticProps() {
	// console.log(data);
	const coffeeStores = await fetchCoffeeStores();
	return {
		props: {
			Stores: coffeeStores,
		},
	};
}
